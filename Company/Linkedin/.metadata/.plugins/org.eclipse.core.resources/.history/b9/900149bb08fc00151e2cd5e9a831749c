import java.util.LinkedList;
import java.util.Queue;

public class Codec implements SerializeDeserialize {
	/*
	 * Serialize uses queue implementation
	 * Time complexity: 
	 * Extra space:
	 * @see SerializeDeserialize#serialize(TreeNode)
	 */
	public String serialize(TreeNode root) {
		// TODO Auto-generated method stub
		StringBuilder result=new StringBuilder("[");
		Queue<TreeNode> curr_lv=new LinkedList<>();
		boolean finished=false;
		curr_lv.offer(root);
		
		while(!finished && !curr_lv.isEmpty()){
			int size=curr_lv.size();
			Queue<TreeNode> next_lv=new LinkedList<>();
			for(int i=0; i<size; i++){
				TreeNode node=curr_lv.poll();
				if(node==null){
					result.append('#');
					continue;
				}
			}
		}
		return result.toString();
	}

	/*
	 * (non-Javadoc)
	 * @see SerializeDeserialize#deserialize(java.lang.String)
	 */
	public TreeNode deserialize(String data) {
		// TODO Auto-generated method stub
		return null;
	}

}
